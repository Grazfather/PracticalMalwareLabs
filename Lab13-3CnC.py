import base64
import sys
import string
import socket
from Crypto.Cipher import AES

# Base 64
default = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"
alphabet = "CDEFGHIJKLMNOPQRSTUVWXYZABcdefghijklmnopqrstuvwxyzab0123456789+/"
tt = string.maketrans(default, alphabet)
# AES
key = "ijklmnopqrstuvwx"
cipher = AES.new(key, AES.MODE_CBC, '\x00'*16)

def b64encode(text):
    # Encode
    b64 = base64.b64encode(text)
    # Replace each character with the counterpart in the non-standard alphabet
    return string.translate(b64, tt)

host = '0.0.0.0'
port = 8910
sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
sock.bind((host, port))
sock.listen(1)
try:
    client, address = sock.accept()
    while True:


        text = raw_input(">>>")
        encoded = b64encode(text + "\r\n")
        print "Sending '{}'".format(encoded)
        client.send(encoded)

        response = client.recv(4096)
        #print response.encode('hex')
        print cipher.decrypt(response)
except KeyboardInterrupt:
    print "Done"
except socket.error:
    print "Connection closed"
finally:
    client.close()
